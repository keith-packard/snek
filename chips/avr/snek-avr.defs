#
# Copyright Â© 2019 Keith Packard <keithp@keithp.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#

SNEK_AO = $(SNEK_ROOT)/ao

SNEK_PORT?=.

SNEK_LOCAL_VPATH = $(SNEK_AVR):$(SNEK_AO)

vpath ao-pins.h $(SNEK_PORT)

SNEK_AVR_SRC = \
	snek-io.c \
	snek-pow.c \
	snek-random-small.c \
	snek-input.c \
	snek-avr-eeprom.c \
	ao-snek-avr.c \
	ao-usb-avr.c \
	ao-notask.c \
	ao-product.c \
	snek-atof.c \
	strfromg.c

SNEK_AVR_INC = \
	ao.h \
	ao-arch.h \
	ao-arch-funcs.h \
	ao-led.h \
	ao-notask.h \
	ao-pins.h \
	ao-product.h \
	snek-avr.h \
	ao-usb.h \
	$(SNEK_EXT_INC)

SNEK_AVR_BUILTINS = \
	snek-gpio.builtin \
	snek-eeprom.builtin \
	snek-random.builtin \
	snek-input.builtin \
	snek-avr.builtin

SNEK_NO_FILE = 1

#OPT=-Os -frename-registers -funsigned-char -fno-jump-tables -mcall-prologues

OPT=-Os \
    -mrelax \
    -Wno-array-bounds \
    -frename-registers \
    -funsigned-char \
    -mcall-prologues \
    -fno-move-loop-invariants \
    -fno-move-loop-stores \
    -fno-split-loops \
    -fno-unswitch-loops \
    -fno-unroll-loops \
    -fno-peel-loops

SNEK_CFLAGS = $(SNEK_MOST_WARNINGS) $(SNEK_BASE_CFLAGS)

AO_CFLAGS=\
	$(OPT) -g

AVR_CFLAGS=-DF_CPU=$(AVR_CLOCK) -mmcu=atmega32u4 -g $(SNEK_CFLAGS) -Waddr-space-convert \
	-I. -I$(SNEK_PORT) -I$(SNEK_AVR) -I$(SNEK_AO) -I$(SNEK_ROOT) $(AO_CFLAGS)

AVR_FLASH_SIZE ?= 0x7e00

CFLAGS = $(SNEK_CFLAGS) $(AVR_CFLAGS)

LDSCRIPT=$(SNEK_AVR)/snek-avr51.x

LDFLAGS=$(SNEK_LDFLAGS) \
	-lm \
	-Wl,-T$(LDSCRIPT) \
	-Wl,--defsym -Wl,__TEXT_REGION_LENGTH__=$(AVR_FLASH_SIZE) \
	-Wl,-Map=$(MAP)

CC=avr-gcc

BASE=$(PROGNAME)-$(SNEK_VERSION)
PROG=$(BASE).elf
HEX=$(BASE).hex
MAP=$(BASE).map

PRODUCT=$(PRODUCT_NAME)-v$(SNEK_VERSION)
IDPRODUCT=0x000a

.SUFFIXES: .elf .hex

.elf.hex:
	avr-objcopy -O ihex -R .eeprom $^ $@

ao-product.h: $(SNEK_ROOT)/snek.defs Makefile
	python3 $(SNEK_AO)/make-product.py -v $(SNEK_VERSION) -p $(PRODUCT_NAME) > $@
